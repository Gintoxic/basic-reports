names(c2)<-paste(names(c2), "_2", sep="")
cc<-cbind(c1,c2)
cc<-rbind(c1,c2)
spChFIDs(c1, paste("_c1", rownames(c1), sep = "_"))
c1<-readShapeSpatial(file)
paste("_c1", rownames(c1), sep = "_")
paste("c1", names(c1), sep = "_")
spChFIDs(c1, paste("c1", names(c1), sep = "_"))
?spChFIDs
paste("_c2", rownames(c2), sep = "_")
paste("c1", names(c1), sep = "_")
laender<-c("baden-wuerttemberg","nordrhein-westfalen")
type<-c("waterways")
i<-1
i<-2
j<-1
file<-paste("C:\\Geodaten\\ger\\", laender[i], "-latest.shp\\", type[j], ".shp"   , sep="")
c1<-readShapeSpatial(file)
plot(ger)
library(sp)
library(maptools)
library(sp)
library(maptools)
laender<-c("baden-wuerttemberg","nordrhein-westfalen")
type<-c("waterways")
i<-1
i<-2
j<-1
file<-paste("C:\\Geodaten\\ger\\", laender[i], "-latest.shp\\", type[j], ".shp"   , sep="")
##-----------------------------------
adm<-"1"
load(url(paste("http://gadm.org/data/rda/DEU_adm", adm ,".RData", sep="")))
ger<-gadm
plot(ger)
file<-paste("C:\\Geodaten\\ger\\", laender[i], "-latest.shp\\", type[j], ".shp"   , sep="")
c1<-readShapeSpatial(file)
plot(c1)
plot(c1, add=T)
plot(ger)
plot(c1, add=T, color="blue2")
plot(c1, add=T, col="blue2")
c1[which(c1$name=="Schneidheimer Sechta"),]
rgb
?rgb
red<-c(0)
green<-c(25)
blue<-c(60)
alpha<-0
<-rgb(red, green, blue, alpha, names = NULL, maxColorValue = 1)
red<-c(0)
green<-c(25)
blue<-c(60)
alpha<-0
<-rgb(red, green, blue, alpha)
col<-rgb(red, green, blue, alpha)
col<-rgb(red, green, blue, alpha, names = NULL, maxColorValue = 1)
red<-c(0)/255
green<-c(25)/255
blue<-c(60)/255
alpha<-0
max<-255
col<-rgb(red, green, blue, alpha, names = NULL, maxColorValue = 1)
bars(rep(1,length(col)))
barplot(rep(1,length(col)))
barplot(rep(1,length(col)), col=col)
colormatrix<-rgb(red, green, blue, alpha, names = NULL, maxColorValue = 1)
barplot(rep(1,length(colmatrix)), col=colmatrix)
colormatrix<-rgb(red, green, blue, alpha, names = NULL, maxColorValue = 1)
barplot(rep(1,length(colmatrix)), col=colormatrix)
colormatrix<-rgb(red, green, blue, alpha, names = NULL, maxColorValue = 1)
barplot(rep(1,length(colmatrix)), col=colormatrix)
barplot(rep(1,length(colmatrix)), col=colormatrix)
colormatrix<-rgb(red, green, blue, alpha, names = NULL, maxColorValue = 1)
barplot(rep(1,length(colmatrix)), col=colormatrix)
colormatrix<-rgb(red, green, blue, alpha, names = NULL, maxColorValue = 1)
colormatrix<-rgb(red, green, blue, alpha, names = NULL, maxColorValue = 1)
barplot(rep(1,length(colormatrix)), col=colormatrix)
red<-c(0)
green<-c(25)
blue<-c(60)
alpha<-0
max<-255
colormatrix<-rgb(red, green, blue, alpha, names = NULL, maxColorValue = 255)
barplot(rep(1,length(colormatrix)), col=colormatrix)
red<-   c(0,148)
green<- c(25,193)
blue<-  c(60,26)
alpha<-0
max<-255
colormatrix<-rgb(red, green, blue, alpha, names = NULL, maxColorValue = 255)
barplot(rep(1,length(colormatrix)), col=colormatrix)
plot(rep(1,length(colormatrix)), col=colormatrix)
plot(rep(1,length(colormatrix)), col=colormatrix)
plot(rep(1,length(colormatrix)), col=colormatrix, cex=10)
points(rep(1,length(colormatrix)), col=colormatrix, cex=10)
red<-   c(0,148)
green<- c(25,193)
blue<-  c(60,26)
alpha<-0
max<-255
colormatrix<-rgb(red, green, blue, alpha, names = NULL, maxColorValue = 255)
plot(rep(1,length(colormatrix)), col=colormatrix, cex=10)
points(rep(1,length(colormatrix)), col=colormatrix, cex=10)
plot(1:10,1:10, col=colormatrix, cex=10)
current<-colormatri[1]
current<-colormatrix[1]
plot(1:10,1:10, col=current, cex=10)
plot(1:10,1:10, col="blue", cex=10, )
?plot
?hex2RGB
?hex2RGB
hex2RGB(c("#FF0000","#00FF00", "#0000FF"))
install.packages("colorspace")
library("colorspace", lib.loc="C:/Tools/R2152/library")
hex2RGB(c("#FF0000","#00FF00", "#0000FF"))
current<-hex2RGB(colormatrix[1])
red<-   c(0,148)
green<- c(25,193)
blue<-  c(60,26)
alpha<-0
max<-255
colormatrix<-rgb(red, green, blue, alpha, names = NULL, maxColorValue = 255)
colormatrix
current<-hex2RGB(colormatrix[1])
colormatrix
names(colormatrix)
colormatrix
data.type(colormatrix)
data.class(colormatrix)
red<-   c(0,148)
green<- c(25,193)
blue<-  c(60,26)
alpha<-0
max<-255
colormatrix<-rgb(red, green, blue, alpha, names = NULL, maxColorValue = 255)
current<-hex2RGB(colormatrix[1])
colormatrix<-rgb(red, green, blue, alpha, names = NULL, maxColorValue = 255)
data.class(colormatrix)
current<-hex2RGB(colormatrix[1])
install.packages("RColorBrewer")
library("RColorBrewer", lib.loc="C:/Tools/R2152/library")
detach("package:RColorBrewer", unload=TRUE)
brewer.pal(1, "bla")
library(RColorBrewer)
brewer.pal(1, "bla")
brewer.pal(1)
brewer.pal()
hex2RGB(c("94C11A","#00FF00", "#0000FF"))
hex2RGB(c("94C11A","#00FF00", "#0000FF"))
hex2RGB(c("#94C11A","#00FF00", "#0000FF"))
col<-hex2RGB(c("#94C11A","#00FF00", "#0000FF"))
col
colors<-hex2RGB(c("#94C11A","#00FF00", "#0000FF"))
plot(1:10,1:10, col=colors, cex=10, )
colors<-hex2RGB(c("#94C11A","#00FF00", "#0000FF"))
plot(1:10,1:10, col="#94C11A", cex=10, )
green1<-"#94C11A"
green0<-"5E9E00"
plot(1:10,1:10, col=green0, cex=10, )
plot(1:10,1:10, col=hex2RGB(green0), cex=10, )
green0<-"#5E9E00"
plot(1:10,1:10, col=hex2RGB(green0), cex=10, )
green1<-"#94C11A"
plot(1:10,1:10, col=hex2RGB(green1), cex=10, )
hex2RGB(green1)
hex2RGB(green1)
plot(1:10,1:10, col=hex2RGB(green1), cex=10, )
plot(1:10,1:10, col=hex2RGB(green1), cex=10)
plot(1:10,1:10, col=red, cex=10)
plot(1:10,1:10, col=blue, cex=10)
plot(1:10,1:10, col=green, cex=10)
hex2RGB(green1)
plot(1:10,1:10, col="#94C11A", cex=10)
plot(1:10,1:10, col=green1, cex=10)
green2<-"#B6D06B"
plot(1:10,1:10, col=green2, cex=10)
plot(1:10,1:10, col=green3, cex=10)
green2<-"#B6D06B"
plot(1:10,1:10, col=green2, cex=10)
plot(1:10,1:10, col=green1, cex=10)
blue0<-"#27445F"
plot(1:10,1:10, col=blue0, cex=10)
barplotplot(1:10,1:10, col=blue0, cex=10)
barplot(1:10,1:10, col=blue0, cex=10)
barplot(1:10, col=blue0, cex=10)
barplot(1:10, col=blue0)
greens<-c(green0, green1, green2)
barplot(1:10, col=greens)
barplot(1:10, col=darkblue)
darkblue<-"#00193C"
barplot(1:10, col=darkblue)
blues<-c(darkblue, blue0)
barplot(1:10, col=blues)
blue<-"#8C93A4"
blue1<-"#8C93A4"
blues<-c(darkblue, blue0, blue1)
barplot(1:10, col=blues)
green3<-"#80AB1F"
greens<-c(green0, green1, green2, green3)
barplot(1:10, col=greens)
green1<-"#80AB1F"
green1<-"#80AB1F"
green2<-"#B6D06B"
green3<-"#94C11A"
darkblue<-"#00193C"
blue0<-"#27445F"
blue1<-"#8C93A4"
greens<-c(green0, green1, green2, green3)
blues<-c(darkblue, blue0, blue1)
barplot(1:10, col=blues)
barplot(1:10, col=greens)
green1<-"#80AB1F"
green2<-"#94C11A"
green3<-"#B6D06B"
darkblue<-"#00193C"
blue0<-"#27445F"
blue1<-"#8C93A4"
greens<-c(green0, green1, green2, green3)
blues<-c(darkblue, blue0, blue1)
barplot(1:10, col=blues)
barplot(1:10, col=greens)
blues<-c(darkblue, blue0, blue1)
barplot(1:10, col=blues)
runif(10)
runif(100)
a<-runif(100)
as<-sort(a)
as
startzeit<-Sys.Date
startzeit
startzeit<-Sys.Date
as<-sort(a)
dauer<-startzeit-Sys.Date
dauer<-startzeit-Sys.Date
startzeit<-Sys.Date
startzeit<-Sys.Date()
dauer<-startzeit-Sys.Date()
dauer
startzeit<-Sys.Time()
startzeit<-Sys.time()
as<-sort(a)
dauer<-startzeit-Sys.time()
print(dauer)
a<-runif(1000)
startzeit<-Sys.time()
as<-sort(a)
dauer<-startzeit-Sys.time()
print(dauer)
a<-runif(10000)
startzeit<-Sys.time()
as<-sort(a)
dauer<-startzeit-Sys.time()
print(dauer)
a<-runif(10^4)
startzeit<-Sys.time()
as<-sort(a)
dauer<-startzeit-Sys.time()
print(dauer)
a<-runif(10^5)
startzeit<-Sys.time()
as<-sort(a)
dauer<-startzeit-Sys.time()
print(dauer)
a<-runif(10^10)
startzeit<-Sys.time()
as<-sort(a)
dauer<-startzeit-Sys.time()
print(dauer)
a<-runif(10^20)
a<-runif(10000)
a<-runif(1000000)
a<-runif(10000000)
a<-runif(100000000000000)
a<-runif(1000000000000)
a<-runif(100000000000)
a<-runif(10000000000)
a<-runif(1000000000)
a<-runif(100000000)
startzeit<-Sys.time()
as<-sort(a)
dauer<-startzeit-Sys.time()
print(dauer)
a<-runif(10 000 000)
a<-runif(10000000)
startzeit<-Sys.time()
as<-sort(a)
dauer<-startzeit-Sys.time()
print(dauer)
dauer<-startzeit-Sys.time()*(-1)
a<-runif(10000000)
startzeit<-Sys.time()
as<-sort(a)
dauer<-startzeit-Sys.time()
print(dauer)
a<-runif(1000000)
startzeit<-Sys.time()
as<-sort(a)
dauer<-startzeit-Sys.time()
print(dauer)
a<-runif(1000000)
startzeit<-Sys.time()
as<-sort(a)
dauer<-startzeit-Sys.time()
print(dauer)
a<-runif(10000000)
startzeit<-Sys.time()
as<-sort(a)
dauer<-startzeit-Sys.time()
print(dauer)
a<-runif(100000000)
startzeit<-Sys.time()
as<-sort(a)
dauer<-startzeit-Sys.time()
print(dauer)
a<-runif(100000000)
startzeit<-Sys.time()
as<-sort(a)
dauer<-startzeit-Sys.time()
print(dauer)
n<-1000000
a<-runif(n)
b<-runif(n)
mod<-glm(a~b)
n<-1000000
startzeit<-Sys.time()
a<-runif(n)
b<-runif(n)
mod<-glm(a~b)
as<-sort(a)
dauer<-startzeit-Sys.time()
print(dauer)
n<-1000000
startzeit<-Sys.time()
a<-runif(n)
b<-runif(n)
mod<-glm(a~b)
dauer<-startzeit-Sys.time()
print(dauer)
summary(mod)
n<-10000000
startzeit<-Sys.time()
a<-runif(n)
b<-runif(n)
mod<-glm(a~b)
dauer<-startzeit-Sys.time()
print(dauer)
summary(mod)
install.packages("sp")
n<-1000000
startzeit<-Sys.time()
a<-runif(n)
b<-runif(n)
mod<-glm(a~b)
dauer<-startzeit-Sys.time()
print(dauer)
n<-10000000
startzeit<-Sys.time()
a<-runif(n)
b<-runif(n)
mod<-glm(a~b)
dauer<-startzeit-Sys.time()
print(dauer)
library(RODBC)
install.packages("RODBC")
library(RODBC)
?odbcConnect
odbcConnect(dsn="traxtest")
chanel<-odbcConnect(dsn="traxtest")
odbcClose(chanel)
sqlQuery<-"select * from normalized_readings;"
sqlQuery1<-"select * from normalized_readings;"
sqlQuery.1<-"select * from normalized_readings;"
chanel<-odbcConnect(dsn="traxtest")
odbcQuery(chanel, sqlQuery.1)
a<-odbcQuery(chanel, sqlQuery.1)
odbcClose(chanel)
odbcClose(chanel)
sqlQuery.1<-"select count(*) from normalized_readings;"
chanel<-odbcConnect(dsn="traxtest")
a<-sqlQuery(chanel, sqlQuery.1)
odbcClose(chanel)
viewData(a)
sqlQuery.1<-"select * from normalized_readings;"
chanel<-odbcConnect(dsn="traxtest")
startzeit<-Sys.time()
a<-sqlQuery(chanel, sqlQuery.1)
odbcClose(chanel)
laufzeit<-Sys.time()-startzeit
print(laufzeit)
str(a)
Sys.info
R.version
sqlQuery.1<-"select * from normalized_readings;"
chanel<-odbcConnect(dsn="traxtest")
startzeit<-Sys.time()
a<-sqlQuery(chanel, sqlQuery.1)
odbcClose(chanel)
laufzeit<-Sys.time()-startzeit
print(laufzeit)
str(a)
sqlQuery.1<-"select distinct mac, time from normalized_readings;"
sqlQuery.2<-"select distinct mac, time from normalized_readings;"
chanel<-odbcConnect(dsn="traxtest")
startzeit<-Sys.time()
a<-sqlQuery(chanel, sqlQuery.2)
odbcClose(chanel)
laufzeit<-Sys.time()-startzeit
print(laufzeit)
lib<-library()
lib
library()
lib$header
lib$header[1]
library(RODBC)
library(knitr)
?odbcConnect
sqlQuery.1<-"select * from normalized_readings;"
chanel<-odbcConnect(dsn="traxstage")
startzeit<-Sys.time()
dat<-sqlQuery(chanel, sqlQuery.1)
odbcClose(chanel)
laufzeit<-Sys.time()-startzeit
print(laufzeit)
fix(chanel)
viewData(dat)
viewData(dat)
library(RODBC)
startzeitScript<-Sys.time()
#sqlQuery.1<-"select * from normalized_readings;"
sqlQuery.1<-"select device, mac, read_at from normalized_readings;"
chanel<-odbcConnect(dsn="traxstage")
startzeit<-Sys.time()
dat<-sqlQuery(chanel, sqlQuery.1)
odbcClose(chanel)
laufzeit<-Sys.time()-startzeit
print(laufzeit)
table(dat$device)
table(strftime(dat$session_start, "%Y-%m-%d"),dat$device)
table(strftime(dat$read_at, "%Y-%m-%d"),dat$device)
library(RODBC)
startzeitScript<-Sys.time()
#sqlQuery.1<-"select * from normalized_readings;"
sqlQuery.1<-"select device, mac, read_at from normalized_readings;"
chanel<-odbcConnect(dsn="traxstage")
startzeit<-Sys.time()
dat<-sqlQuery(chanel, sqlQuery.1)
odbcClose(chanel)
laufzeit<-Sys.time()-startzeit
print(laufzeit)
dat$day<-format(dat$read_at, "%y-%m-%d")
#str(dat)
##########################################################################
##########################################################################
##########################################################################
table(dat$device)
table(strftime(dat$read_at, "%Y-%m-%d"),dat$device)
source('C:/Traxity/Frontend/BasicReports/plots/ten_days/ten_days.R')
source('C:/Traxity/Frontend/BasicReports/plots/frequent_manufact/frequent_manufact.R')
source('C:/Traxity/Frontend/BasicReports/plots/last_update/last_update.R')
laufzeitScript<-Sys.time()-startzeitScript
print(laufzeitScript)
#library(RCurl)
#?ftpUpload
#ftpUpload(what, to, asText = inherits(what, "AsIs") || is.raw(what), ..., curl = getCurlHandle())
library(RODBC)
startzeitScript<-Sys.time()
#sqlQuery.1<-"select * from normalized_readings;"
sqlQuery.1<-"select device, mac, read_at from normalized_readings;"
chanel<-odbcConnect(dsn="traxstage")
startzeit<-Sys.time()
dat<-sqlQuery(chanel, sqlQuery.1)
odbcClose(chanel)
laufzeit<-Sys.time()-startzeit
print(laufzeit)
dat$day<-format(dat$read_at, "%y-%m-%d")
#str(dat)
##########################################################################
##########################################################################
##########################################################################
table(dat$device)
table(strftime(dat$read_at, "%Y-%m-%d"),dat$device)
source('C:/Traxity/BasicReports/plots/ten_days/ten_days.R')
source('C:/Traxity/BasicReports/plots/frequent_manufact/frequent_manufact.R')
source('C:/Traxity/BasicReports/plots/last_update/last_update.R')
laufzeitScript<-Sys.time()-startzeitScript
print(laufzeitScript)
#library(RCurl)
#?ftpUpload
#ftpUpload(what, to, asText = inherits(what, "AsIs") || is.raw(what), ..., curl = getCurlHandle())
source('C:/Traxity/BasicReports/plots/ten_days/ten_days.R')
library(RODBC)
startzeitScript<-Sys.time()
#sqlQuery.1<-"select * from normalized_readings;"
sqlQuery.1<-"select device, mac, read_at from normalized_readings;"
chanel<-odbcConnect(dsn="traxstage")
startzeit<-Sys.time()
dat<-sqlQuery(chanel, sqlQuery.1)
odbcClose(chanel)
laufzeit<-Sys.time()-startzeit
print(laufzeit)
dat$day<-format(dat$read_at, "%y-%m-%d")
#str(dat)
##########################################################################
##########################################################################
##########################################################################
table(dat$device)
table(strftime(dat$read_at, "%Y-%m-%d"),dat$device)
source('C:/Traxity/BasicReports/plots/ten_days/ten_days.R')
source('C:/Traxity/BasicReports/plots/ten_days/ten_days.R')
source('C:/Traxity/BasicReports/plots/frequent_manufact/frequent_manufact.R')
source('C:/Traxity/BasicReports/plots/frequent_manufact/frequent_manufact.R')
source('C:/Traxity/BasicReports/plots/last_update/last_update.R')
